[{"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/index.js":"1","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/App.js":"2","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Base/Limbo.js":"3","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Navbar/Navibar.js":"4","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Form/LoginForm.js":"5","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/disconnected/Login.js":"6","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/disconnected/HomePage.js":"7","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Base/LayOut.js":"8","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Results/Inactive.js":"9","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Docs.js":"10","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Future.js":"11","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Blockchains.js":"12","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Mevo.js":"13","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Application.js":"14","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/store/store.js":"15","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/store/hashSlice.js":"16","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/SignOut.js":"17","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/reportWebVitals.js":"18","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Results/SignoutResults.js":"19","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Account.js":"20","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Connected.js":"21","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Feed.js":"22","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Base/FullLayOut.js":"23","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Stats/MainStats.js":"24","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Results/ConnectedResults.js":"25","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Navbar/SignInLogin.js":"26","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Navbar/LoggedIn.js":"27"},{"size":912,"mtime":1649718322173,"results":"28","hashOfConfig":"29"},{"size":5167,"mtime":1649709439927,"results":"30","hashOfConfig":"29"},{"size":1447,"mtime":1650390818677,"results":"31","hashOfConfig":"29"},{"size":2476,"mtime":1649889776754,"results":"32","hashOfConfig":"29"},{"size":3987,"mtime":1649718468112,"results":"33","hashOfConfig":"29"},{"size":252,"mtime":1647586145890,"results":"34","hashOfConfig":"29"},{"size":257,"mtime":1647586082864,"results":"35","hashOfConfig":"29"},{"size":432,"mtime":1647123748109,"results":"36","hashOfConfig":"29"},{"size":396,"mtime":1647586024495,"results":"37","hashOfConfig":"29"},{"size":3696,"mtime":1647738905018,"results":"38","hashOfConfig":"29"},{"size":1362,"mtime":1647739351847,"results":"39","hashOfConfig":"29"},{"size":1289,"mtime":1647879968067,"results":"40","hashOfConfig":"29"},{"size":1333,"mtime":1649362233588,"results":"41","hashOfConfig":"29"},{"size":1193,"mtime":1647739297260,"results":"42","hashOfConfig":"29"},{"size":6691,"mtime":1649716400489,"results":"43","hashOfConfig":"29"},{"size":1949,"mtime":1649716358119,"results":"44","hashOfConfig":"29"},{"size":238,"mtime":1649718975477,"results":"45","hashOfConfig":"29"},{"size":385,"mtime":1649718357170,"results":"46","hashOfConfig":"29"},{"size":746,"mtime":1649376597436,"results":"47","hashOfConfig":"29"},{"size":2752,"mtime":1649374990708,"results":"48","hashOfConfig":"29"},{"size":1118,"mtime":1649719114940,"results":"49","hashOfConfig":"29"},{"size":3052,"mtime":1649374990711,"results":"50","hashOfConfig":"29"},{"size":603,"mtime":1649377305164,"results":"51","hashOfConfig":"29"},{"size":2493,"mtime":1649716631157,"results":"52","hashOfConfig":"29"},{"size":497,"mtime":1649376642872,"results":"53","hashOfConfig":"29"},{"size":1422,"mtime":1649731388514,"results":"54","hashOfConfig":"29"},{"size":2003,"mtime":1649888342472,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"9s0fkk",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"71"},"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/index.js",[],[],["146","147"],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/App.js",["148","149","150","151"],[],"import { useEffect } from \"react\";\nimport {Fragment} from 'react';\n\nimport Limbo from './components/Base/Limbo';\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { navBarActions } from \"./store/store\";\nimport { hashSliceActions } from \"./store/hashSlice\";\nfunction App() {\n  const dispatch = useDispatch();\n\n  const limboFull = useSelector((state) => state.navbar.limboFull);\n  const apiValue = useSelector((state) => state.navbar.api);\n  const loggedin = useSelector((state) => state.navbar.navType);\n  const blockChain = useSelector((state) => state.navbar.blockChain);\n  const limbo = useSelector((state) => state.navbar.limbo);\n  const solved = useSelector((state) => state.hashSlice.solved);\n  const hashValue = useSelector((state) => state.hashSlice.hashValue);\n  const trusted = useSelector((state) => state.navbar.trustedUsers);\n  const hashRate = useSelector((state) => state.hashSlice.hashRate);\n  const localMessages = useSelector((state) => state.navbar.messages);\n  const trustedUsers = useSelector((state) => state.navbar.trustedUsers);\n  useEffect(() => {\n    if (limboFull && !solved) {\n      dispatch(hashSliceActions.setMiningStatus(\"Mining\"));\n      const newTimer = setInterval(() => {\n        dispatch(hashSliceActions.mine(limbo));\n      }, 10 * hashRate.rate);\n      return () => clearTimeout(newTimer);\n    }\n  }, [limboFull, dispatch, limbo, solved, hashValue,hashRate]);\n\n  useEffect(() => {\n    if (limboFull && solved && limbo !== \"\") {\n      let block = { POW: hashValue, stamp: new Date(), transaction: limbo };\n      dispatch(navBarActions.setBlockChain(block));\n      dispatch(navBarActions.setLimbo(\"\"));\n      dispatch(navBarActions.setLimboFull(false));\n      dispatch(navBarActions.setTransaction({}));\n      dispatch(hashSliceActions.setHashValue(null));\n      dispatch(hashSliceActions.setSolved(false));\n      dispatch(navBarActions.addCredit());\n      dispatch(navBarActions.blockChainTransaction());\n      dispatch(hashSliceActions.setMiningStatus(\"Scanning Limbo\"));\n    }\n  }, [dispatch, limbo, limboFull, hashValue, solved]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (loggedin === \"loggedin\") {\n        const getData = async () => {\n          const response = await fetch(`${apiValue}blockChain.json`);\n          const response2 = await fetch(`${apiValue}limbo.json`);\n          const userCredits = await fetch(`${apiValue}credits.json`);\n          const messages = await fetch(`${apiValue}messages.json`);\n          const trustedUser = await fetch(`${trusted[0]}blockChain.json`);\n          const trustedMessages = await fetch(`${trusted[0]}messages.json`);\n          \n          const data = await response.json();\n          const data2 = await response2.json();\n          const trustedData = await trustedUser.json();\n          const userCreditData = await userCredits.json();\n          const messageData = await messages.json();\n          const trustedMessageData = await trustedMessages.json();\n\n\n          let blockList = [];\n          console.log(\"HERE IS VALUE\")\n\n          if (Object.keys(data).length < Object.keys(trustedData).length) {\n            dispatch(navBarActions.setBlockChain(trustedData));\n            const postData = async () => {\n              const response = await fetch(`${apiValue}blockChain.json`, {\n                method: \"PUT\",\n                body: JSON.stringify(blockChain),\n              });\n              const data = await response.json();\n            };\n            postData();\n          }\n          for (const [key, value] of Object.entries(data)) {\n            if(value.transaction.action&&value.transaction&&value.stamp){\n              blockList.push({\n                transaction: value.transaction,\n                timeStamp: value.stamp,\n                action: value.transaction.action,\n              });\n            }\n            }\n          blockList.reverse();\n\n          dispatch(hashSliceActions.setBlockList(blockList));\n          dispatch(navBarActions.setCredits(userCreditData));\n          if (localMessages.length!==Object.keys(trustedMessageData).length){\n            if (localMessages.length===0){\n              dispatch(navBarActions.updateMessages({api:apiValue,messages:trustedMessageData}))\n            }\n            // dispatch(navBarActions.setMessages(trustedMessageData))\n            let messageList = [];\n            for (const [key, value] of Object.entries(trustedMessageData)) {\n              messageList.push({\n                author: value.author,\n                text: value.text,\n                time: value.time,\n              });\n            }\n            dispatch(navBarActions.setMessages(messageList));\n          }\n          if (data2 !== \"\"&& trustedUsers.indexOf(apiValue)!==-1) {\n            dispatch(navBarActions.setLimbo(data2));\n            dispatch(navBarActions.setLimboFull(true));\n          }\n        };\n        getData();\n      }\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [limboFull, dispatch, blockChain, apiValue, loggedin, limbo, trusted,trustedUsers,localMessages]);\n\n  return (\n    <Fragment>\n      <Limbo/>\n    </Fragment>\n  );\n}\n\nexport default App;","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Base/Limbo.js",["152","153"],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Navbar/Navibar.js",["154","155","156","157","158","159","160","161","162","163","164"],[],"import React, { useState,Fragment } from 'react';\nimport ReactDOM from 'react-dom'\nimport { useSelector } from \"react-redux\";\nimport SignInLogin from \"./SignInLogin\";\nimport LoggedIn from \"./LoggedIn\";\nimport { Layout, Menu, Breadcrumb, PageHeader } from 'antd';\nimport HomePage from \"../../pages/disconnected/HomePage\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { UserOutlined, LaptopOutlined, NotificationOutlined,BookOutlined } from '@ant-design/icons';\nimport Docs from \"../../pages/connected/Docs/Docs\";\nimport './Navibar.css';\n\nconst Navibar = (props) => {\n\nconst navStatus = useSelector((state) => state.navbar.navType);\nconst { SubMenu } = Menu;\nconst { Header, Sider, Footer } = Layout;\nconsole.log(navStatus);\n\n    return(\n      <Layout>\n        <Header>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"1\">Mevo  <Link to=\"/\" /> </Menu.Item>\n          <Menu.Item key=\"2\">Login  <Link to=\"/Login\" /> </Menu.Item>\n          </Menu>\n        </Header>\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            style={{ height: '100%', borderRight: 0 }}\n          >\n            {navStatus === \"login\" ? <SignInLogin /> : <LoggedIn />}\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Profile\">\n              <Menu.Item key=\"1\">Acount Creation  <Link to=\"/\" /> </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub4\" icon={<BookOutlined />} title=\"Documentation\">\n              <Menu.Item key=\"6\">What is Mevo? <Link to=\"/docsMevo\" /> </Menu.Item>\n              <Menu.Item key=\"7\">How our Application Works <Link to=\"/docsApplication\" /> </Menu.Item>\n              <Menu.Item key=\"8\">Why Blockchains? <Link to=\"/docsBlockchains\" /> </Menu.Item>\n              <Menu.Item key=\"9\">Future Functions <Link to=\"/docsFuture\" /> </Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '10vw 2vw 2vw' }}>\n          {/* <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 100,\n              minHeight: 280,\n            }}\n          >\n            {props.children}\n          </Content> */}\n          {props.children}\n        </Layout>\n      </Layout>\n    </Layout>\n    );\n}\n\nexport default Navibar;",["165","166"],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Form/LoginForm.js",["167","168"],[],"import React, {useState} from 'react';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button } from \"antd\";\nimport { navBarActions } from \"../../store/store\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nimport { getBlockChain } from \"../../store/store\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      api:\"\"\n    },\n    onSubmit: (value) => {\n      navigate(\"/connected\");\n      dispatch(navBarActions.setAPI(value.api))\n      dispatch(navBarActions.setUserName(value.username))\n      dispatch(navBarActions.changeNav(\"loggedin\"));\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required(),\n      password: Yup.string().required(),\n      api: Yup.string().required().url(),\n    }),\n  });\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        display: \"inline-block\",\n        marginBottom: \"13%\",\n      }}\n    >\n      <Form\n        wrapperCol={{\n          span: 30,\n        }}\n        align=\"center\"\n        layout=\"vertical\"\n        onFinish={formik.handleSubmit}\n      >\n        <div style={{ backGround: \"White\" }}>\n          <Form.Item\n            style={{ textAlign: \"center\" }}\n            label=\"Username\"\n            required\n            validateStatus={\n              (formik.errors.username && formik.touched.username && \"error\") ||\n              (!formik.errors.username && formik.touched.username && \"success\")\n            }\n            hasFeedback\n            help={\n              formik.errors.username &&\n              formik.touched.username &&\n              \"Username Required\"\n            }\n          >\n            <Input\n              id=\"username\"\n              value={formik.username}\n              placeholder=\"Username\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            validateStatus={\n              (formik.errors.password && formik.touched.password && \"error\") ||\n              (!formik.errors.password && formik.touched.password && \"success\")\n            }\n            hasFeedback\n            required\n            help={\n              formik.errors.password &&\n              formik.touched.password &&\n              \"Password Required\"\n            }\n          >\n            <Input.Password\n              id=\"password\"\n              value={formik.password}\n              placeholder=\"Password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              iconRender={(visible) =>\n                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n              }\n            />\n            <br />\n            <br />\n            <Form.Item\n              required\n              validateStatus={\n                (formik.errors.api && formik.touched.api && \"error\") ||\n                (!formik.errors.api && formik.touched.api && \"success\")\n              }\n              hasFeedback\n              style={{ textAlign: \"left\" }}\n              label=\"API Link\"\n              help=\"https://example-be16f-default-rtdb.firebaseio.com/\"\n            >\n              <Input\n                id=\"api\"\n                placeholder=\"API Link (https://example.firebaseio.com/)\"\n                value={formik.api}\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n              />\n            </Form.Item>\n          </Form.Item>\n          <br />\n          <Button\n            type=\"primary\"\n            disabled={formik.errors.username || formik.errors.password}\n            htmlType=\"submit\"\n          >\n            Connect Node\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\nexport default LoginForm;","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/disconnected/Login.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/disconnected/HomePage.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Base/LayOut.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Results/Inactive.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Docs.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Future.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Blockchains.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Mevo.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Docs/Application.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/store/store.js",["169","170","171","172","173","174","175"],[],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport * as cryptico from \"cryptico-js/dist/cryptico.browser.js\";\nimport hashSlice from \"./hashSlice\";\n\nconst navbar = createSlice({\n  name: \"navbar\",\n  initialState: {\n    navType: \"login\",\n    trustedUsers: [\"https://noahnode-62cc0-default-rtdb.firebaseio.com/\"],\n    blockChain: [{ pow: 0 }],\n    transaction: {},\n    api: \"\",\n    limboFull: false,\n    limbo: \"\",\n    blockLength: 0,\n    credits: null,\n    modal: true,\n    userName: \"\",\n    messages: [],\n  },\n  reducers: {\n    addMessage(state, action) {\n      state.messages = [...state.messages, action.payload];\n    },\n    setMessages(state, action) {\n      state.messages = action.payload;\n    },\n    setAPI(state, action) {\n      state.api = action.payload;\n    },\n    setUserName(state, action) {\n      state.userName = action.payload;\n    },\n    setModal(state, action) {\n      state.modal = action.payload;\n    },\n    addCredit(state, action) {\n      state.credits = state.credits += 1;\n      console.log(\"CALLED\");\n    },\n    subCredit(state, action) {\n      state.credits = state.credits -= 1;\n    },\n    setCredits(state, action) {\n      state.credits = action.payload;\n    },\n    setTransaction(state, action) {\n      state.transaction = action.payload;\n    },\n    changeNav(state, action) {\n      state.navType = action.payload;\n    },\n    setBlockChain(state, action) {\n      state.blockChain = action.payload;\n    },\n    setLimboFull(state, action) {\n      state.limboFull = action.payload;\n    },\n    setLimbo(state, action) {\n      if (state.trustedUsers.indexOf(state.api) !== -1) {\n        state.limbo = action.payload;\n      }\n      if (state.limbo !== \"\") {\n        state.limboFull = true;\n      }\n    },\n    checkLimbo(state, action) {\n      if (state.limbo !== \"\") {\n        state.limboFull = true;\n        // console.log(state.limbo);\n      }\n    },\n    limboTransaction(state, action) {\n      const postData = async () => {\n        const response = await fetch(`${state.trustedUsers[0]}limbo.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(state.transaction),\n        });\n        const data = await response.json();\n      };\n      postData();\n    },\n    creditTransaction(state, action) {\n      const postThree = async () => {\n        const response = await fetch(`${state.api}credits.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(state.credits),\n        });\n        console.log(state.credits);\n        const data = await response.json();\n      };\n      postThree();\n    },\n    messageTransaction(state, action) {\n      const postThree = async () => {\n        const response = await fetch(`${state.trustedUsers[0]}messages.json`, {\n          method: \"POST\",\n          body: JSON.stringify(action.payload),\n        });\n        const data = await response.json();\n      };\n      postThree();\n    },\n    updateMessages(state, action) {\n      const postThree = async () => {\n        const response = await fetch(`${action.payload.api}messages.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(action.payload.messages),\n        });\n        const data = await response.json();\n      };\n      postThree();\n    },\n    blockChainTransaction(state, action) {\n      const postData = async () => {\n        const response = await fetch(\n          `${state.trustedUsers[0]}blockChain.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify(state.blockChain),\n          }\n        );\n        const data = await response.json();\n      };\n      const postTwo = async () => {\n        const response = await fetch(`${state.trustedUsers[0]}limbo.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(state.limbo),\n        });\n        const data = await response.json();\n        console.log(\"Pushed to LIMBO TRUSTED\", data);\n      };\n      const postThree = async () => {\n        const response = await fetch(`${state.trustedUsers[0]}credits.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(state.credits),\n        });\n        const data = await response.json();\n      };\n      const postFour = async () => {\n        const response = await fetch(`${state.trustedUsers[0]}messages.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(state.messages),\n        });\n        const data = await response.json();\n      };\n      postData();\n      postTwo();\n      postThree();\n      postFour();\n    },\n\n    initDatabase(state, action) {\n      console.log(action.payload);\n      const Bits = 512;\n      const PrivateKey = cryptico.generateRSAKey(action.payload.password, Bits);\n      const PublicKey = cryptico.publicKeyString(PrivateKey);\n\n      // const PlainText =\n      //   \"Matt, I need you to help me with my Starcraft strategy.\";\n      // const EncryptionResult = cryptico.encrypt(PlainText, PublicKey);\n\n      // const DecryptionResult = cryptico.decrypt(\n      //   EncryptionResult.cipher,\n      //   PrivateKey\n      // );\n\n      state.transaction = {\n        username: action.payload.username,\n        publicKey: PublicKey,\n        action: \"Account Creation\",\n      };\n      state.api = action.payload.api;\n      console.log(\"HERE IN INIT\" + action.payload.api);\n      const postInit = async () => {\n        const response = await fetch(`${action.payload.api}.json`, {\n          method: \"PUT\",\n          body: JSON.stringify({\n            username: action.payload.username,\n            limbo: [],\n            publicKey: PublicKey,\n            trustedUser: state.trustedUser,\n            blockChain: state.blockChain,\n            credits: 25,\n            messages: \"\",\n          }),\n        });\n        const data = await response.json();\n        console.log(data);\n      };\n\n      postInit();\n    },\n  },\n});\n\nconst loading = createSlice({\n  name: \"loader\",\n  initialState: {\n    isLoading: false,\n  },\n  reducers: {\n    setLoading(state, action) {\n      state.isLoading = action.payload;\n    },\n  },\n});\n\nexport const getBlockChain = (api) => {\n  return async (dispatch) => {\n    const getData = async () => {\n      const response = await fetch(`${api}blockChain.json`);\n      const response2 = await fetch(`${api}messages.json`);\n      const data = await response.json();\n      const data2 = await response2.json();\n      dispatch(navBarActions.setBlockChain(data));\n      dispatch(navBarActions.setMessages(data2));\n    };\n    await getData();\n  };\n};\n\nconst store = configureStore({\n  reducer: {\n    navbar: navbar.reducer,\n    loading: loading.reducer,\n    hashSlice: hashSlice.reducer,\n  },\n});\n\nexport const navBarActions = navbar.actions;\nexport const loadingActions = loading.actions;\n\nexport default store;","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/store/hashSlice.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/SignOut.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/reportWebVitals.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Results/SignoutResults.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Account.js",["176"],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Connected.js",["177","178"],[],"import FullLayOut from \"../../components/Base/FullLayOut\";\nimport ConnectedResult from \"../../components/Results/ConnectedResults\";\nimport { Modal, Button } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport MainStats from \"../../components/Stats/MainStats\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { navBarActions } from \"../../store/store\";\nconst Connected = () => {\n  const modal = useSelector((state)=>state.navbar.modal)\n  const dispatch = useDispatch()\n\n  return (\n    <div>\n      <Modal\n        style={{ marginLeft: \"38%\" }}\n        title=\"Node Connection Staus\"\n        visible={modal}\n        onOk={()=>dispatch(navBarActions.setModal(false))}\n        onCancel={()=>dispatch(navBarActions.setModal(false))}\n        footer={[\n          <Button key=\"submit\" type=\"primary\" onClick={()=>dispatch(navBarActions.setModal(false))}>\n            Sounds Good!\n          </Button>,\n        ]}\n      >\n        <ConnectedResult />\n      </Modal>\n      <FullLayOut titleone=\"Limbo\"titletwo=\"Node\">\n        <MainStats />\n      </FullLayOut>\n    </div>\n  );\n};\nexport default Connected;\n","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/pages/connected/Feed.js",["179","180"],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Base/FullLayOut.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Stats/MainStats.js",[],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Results/ConnectedResults.js",["181"],[],"/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Navbar/SignInLogin.js",["182","183","184","185","186","187","188","189","190"],[],"\nimport React, { useState,Fragment} from 'react';\nimport { Layout, Menu, Breadcrumb, PageHeader } from 'antd';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { BlockOutlined, LaptopOutlined, NotificationOutlined,BookOutlined } from '@ant-design/icons';\nimport './Navibar.css';\n\nconst SignInLogin = (props) => {\n  const { SubMenu } = Menu;\n  const { Header, Content, Sider } = Layout;\n    return(\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            style={{ height: '100%', borderRight: 0 }}\n          >\n            <SubMenu key=\"sub2\" icon={<BlockOutlined />} title=\"Account Creation\">\n              <Menu.Item key=\"2\">Feed  <Link to=\"/\" /> </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub4\" icon={<BookOutlined />} title=\"Documentation\">\n              <Menu.Item key=\"5\">What is Mevo? <Link to=\"/docsMevo\" /> </Menu.Item>\n              <Menu.Item key=\"6\">How our Application Works <Link to=\"/docsApplication\" /> </Menu.Item>\n              <Menu.Item key=\"7\">Why Blockchains? <Link to=\"/docsBlockchains\" /> </Menu.Item>\n              <Menu.Item key=\"8\">Future Functions <Link to=\"/docsFuture\" /> </Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n      </Layout>\n    );\n}\n\nexport default SignInLogin;","/Users/rileyedmunds/Documents/LearnReact/learn1/Mevo/Mevo/src/components/Navbar/LoggedIn.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204"],[],"import {\n    TeamOutlined,\n    FileOutlined,\n    CalculatorOutlined,\n    BlockOutlined,\n    UserDeleteOutlined,\n    RiseOutlined,\n    ToTopOutlined,\n    PoweroffOutlined,\n    FileDoneOutlined,\n    ExperimentOutlined,\n    UserOutlined,\n    NotificationOutlined,\n    LaptopOutlined,\n\n    BookOutlined,\n  } from \"@ant-design/icons\";\n  import { useSelector } from \"react-redux\";\n  import { Menu, Badge, Layout } from \"antd\";\n  import { Link } from \"react-router-dom\";\n  \n  const LoggedIn = () => {\n    const credits = useSelector((state)=>state.navbar.credits)\n    const { SubMenu } = Menu;\n    const { Header, Sider, Footer } = Layout;\n    return (\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Profile\">\n            <Menu.Item key=\"1\">Account Information  <Link to=\"/\" /> </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Friends\">\n            <Menu.Item key=\"2\">Friends List</Menu.Item>\n            <Menu.Item key=\"3\">Find Friends</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"Communities\">\n            <Menu.Item key=\"4\">Subscriptions</Menu.Item>\n            <Menu.Item key=\"5\">Explore</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub4\" icon={<BookOutlined />} title=\"Documentation\">\n            <Menu.Item key=\"6\">What is Mevo? <Link to=\"/docsMevo\" /> </Menu.Item>\n            <Menu.Item key=\"7\">How our Application Works <Link to=\"/docsApplication\" /> </Menu.Item>\n            <Menu.Item key=\"8\">Why Blockchains? <Link to=\"/docsBlockchains\" /> </Menu.Item>\n            <Menu.Item key=\"9\">Future Functions <Link to=\"/docsFuture\" /> </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n    );\n  };\n  export default LoggedIn;",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":63,"column":17,"nodeType":"211","messageId":"212","endLine":63,"endColumn":28},{"ruleId":"209","severity":1,"message":"213","line":77,"column":21,"nodeType":"211","messageId":"212","endLine":77,"endColumn":25},{"ruleId":"209","severity":1,"message":"214","line":81,"column":23,"nodeType":"211","messageId":"212","endLine":81,"endColumn":26},{"ruleId":"209","severity":1,"message":"214","line":100,"column":25,"nodeType":"211","messageId":"212","endLine":100,"endColumn":28},{"ruleId":"209","severity":1,"message":"215","line":12,"column":27,"nodeType":"211","messageId":"212","endLine":12,"endColumn":33},{"ruleId":"209","severity":1,"message":"216","line":12,"column":50,"nodeType":"211","messageId":"212","endLine":12,"endColumn":54},{"ruleId":"209","severity":1,"message":"217","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"218","line":1,"column":26,"nodeType":"211","messageId":"212","endLine":1,"endColumn":34},{"ruleId":"209","severity":1,"message":"219","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"220","line":6,"column":24,"nodeType":"211","messageId":"212","endLine":6,"endColumn":34},{"ruleId":"209","severity":1,"message":"221","line":6,"column":36,"nodeType":"211","messageId":"212","endLine":6,"endColumn":46},{"ruleId":"209","severity":1,"message":"222","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":16},{"ruleId":"209","severity":1,"message":"215","line":8,"column":27,"nodeType":"211","messageId":"212","endLine":8,"endColumn":33},{"ruleId":"209","severity":1,"message":"223","line":9,"column":24,"nodeType":"211","messageId":"212","endLine":9,"endColumn":38},{"ruleId":"209","severity":1,"message":"224","line":9,"column":40,"nodeType":"211","messageId":"212","endLine":9,"endColumn":60},{"ruleId":"209","severity":1,"message":"225","line":10,"column":8,"nodeType":"211","messageId":"212","endLine":10,"endColumn":12},{"ruleId":"209","severity":1,"message":"226","line":17,"column":24,"nodeType":"211","messageId":"212","endLine":17,"endColumn":30},{"ruleId":"205","replacedBy":"227"},{"ruleId":"207","replacedBy":"228"},{"ruleId":"209","severity":1,"message":"217","line":1,"column":16,"nodeType":"211","messageId":"212","endLine":1,"endColumn":24},{"ruleId":"209","severity":1,"message":"229","line":9,"column":10,"nodeType":"211","messageId":"212","endLine":9,"endColumn":23},{"ruleId":"209","severity":1,"message":"213","line":80,"column":15,"nodeType":"211","messageId":"212","endLine":80,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":91,"column":15,"nodeType":"211","messageId":"212","endLine":91,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":101,"column":15,"nodeType":"211","messageId":"212","endLine":101,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":111,"column":15,"nodeType":"211","messageId":"212","endLine":111,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":124,"column":15,"nodeType":"211","messageId":"212","endLine":124,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":139,"column":15,"nodeType":"211","messageId":"212","endLine":139,"endColumn":19},{"ruleId":"209","severity":1,"message":"213","line":146,"column":15,"nodeType":"211","messageId":"212","endLine":146,"endColumn":19},{"ruleId":"209","severity":1,"message":"230","line":6,"column":17,"nodeType":"211","messageId":"212","endLine":6,"endColumn":24},{"ruleId":"209","severity":1,"message":"231","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":19},{"ruleId":"209","severity":1,"message":"217","line":4,"column":21,"nodeType":"211","messageId":"212","endLine":4,"endColumn":29},{"ruleId":"209","severity":1,"message":"232","line":2,"column":5,"nodeType":"211","messageId":"212","endLine":2,"endColumn":9},{"ruleId":"209","severity":1,"message":"233","line":5,"column":5,"nodeType":"211","messageId":"212","endLine":5,"endColumn":11},{"ruleId":"209","severity":1,"message":"234","line":2,"column":18,"nodeType":"211","messageId":"212","endLine":2,"endColumn":24},{"ruleId":"209","severity":1,"message":"217","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":25},{"ruleId":"209","severity":1,"message":"218","line":2,"column":26,"nodeType":"211","messageId":"212","endLine":2,"endColumn":34},{"ruleId":"209","severity":1,"message":"220","line":3,"column":24,"nodeType":"211","messageId":"212","endLine":3,"endColumn":34},{"ruleId":"209","severity":1,"message":"221","line":3,"column":36,"nodeType":"211","messageId":"212","endLine":3,"endColumn":46},{"ruleId":"209","severity":1,"message":"215","line":4,"column":27,"nodeType":"211","messageId":"212","endLine":4,"endColumn":33},{"ruleId":"209","severity":1,"message":"223","line":5,"column":25,"nodeType":"211","messageId":"212","endLine":5,"endColumn":39},{"ruleId":"209","severity":1,"message":"224","line":5,"column":41,"nodeType":"211","messageId":"212","endLine":5,"endColumn":61},{"ruleId":"209","severity":1,"message":"235","line":10,"column":11,"nodeType":"211","messageId":"212","endLine":10,"endColumn":17},{"ruleId":"209","severity":1,"message":"230","line":10,"column":19,"nodeType":"211","messageId":"212","endLine":10,"endColumn":26},{"ruleId":"209","severity":1,"message":"236","line":2,"column":5,"nodeType":"211","messageId":"212","endLine":2,"endColumn":17},{"ruleId":"209","severity":1,"message":"237","line":3,"column":5,"nodeType":"211","messageId":"212","endLine":3,"endColumn":17},{"ruleId":"209","severity":1,"message":"238","line":4,"column":5,"nodeType":"211","messageId":"212","endLine":4,"endColumn":23},{"ruleId":"209","severity":1,"message":"239","line":5,"column":5,"nodeType":"211","messageId":"212","endLine":5,"endColumn":18},{"ruleId":"209","severity":1,"message":"240","line":6,"column":5,"nodeType":"211","messageId":"212","endLine":6,"endColumn":23},{"ruleId":"209","severity":1,"message":"241","line":7,"column":5,"nodeType":"211","messageId":"212","endLine":7,"endColumn":17},{"ruleId":"209","severity":1,"message":"242","line":8,"column":5,"nodeType":"211","messageId":"212","endLine":8,"endColumn":18},{"ruleId":"209","severity":1,"message":"243","line":9,"column":5,"nodeType":"211","messageId":"212","endLine":9,"endColumn":21},{"ruleId":"209","severity":1,"message":"244","line":10,"column":5,"nodeType":"211","messageId":"212","endLine":10,"endColumn":21},{"ruleId":"209","severity":1,"message":"245","line":11,"column":5,"nodeType":"211","messageId":"212","endLine":11,"endColumn":23},{"ruleId":"209","severity":1,"message":"246","line":19,"column":18,"nodeType":"211","messageId":"212","endLine":19,"endColumn":23},{"ruleId":"209","severity":1,"message":"247","line":23,"column":11,"nodeType":"211","messageId":"212","endLine":23,"endColumn":18},{"ruleId":"209","severity":1,"message":"235","line":25,"column":13,"nodeType":"211","messageId":"212","endLine":25,"endColumn":19},{"ruleId":"209","severity":1,"message":"226","line":25,"column":28,"nodeType":"211","messageId":"212","endLine":25,"endColumn":34},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'messageData' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'key' is assigned a value but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'Fragment' is defined but never used.","'ReactDOM' is defined but never used.","'Breadcrumb' is defined but never used.","'PageHeader' is defined but never used.","'HomePage' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'Docs' is defined but never used.","'Footer' is assigned a value but never used.",["248"],["249"],"'getBlockChain' is defined but never used.","'Content' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Header' is assigned a value but never used.","'TeamOutlined' is defined but never used.","'FileOutlined' is defined but never used.","'CalculatorOutlined' is defined but never used.","'BlockOutlined' is defined but never used.","'UserDeleteOutlined' is defined but never used.","'RiseOutlined' is defined but never used.","'ToTopOutlined' is defined but never used.","'PoweroffOutlined' is defined but never used.","'FileDoneOutlined' is defined but never used.","'ExperimentOutlined' is defined but never used.","'Badge' is defined but never used.","'credits' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]